!function(e){function t(e,t){var a;return a=e.attr("data-type"),i[a]?i[a](e,t):i._default(e,t,a)}function a(a,n,i){var i=i||"> .acf-field, > .acf-fields > .acf-field",c=a.find(i),d=n.find(i);c.each(function(a,n){return d[a]?e(c[a]).data("type")!==e(d[a]).data("type")?(console.trace("Error: source field type does not match destination field type"),!1):void t(e(c[a]),e(d[a])):(console.trace("Error: source fields do not match destination fields"),!1)})}var n=acf_duplicate_repeater.options,i={_default:function(t,a,n){var i=t.find('[type="'+n+'"]');acf.getField(t),acf.getField(a);a.find('[type="'+n+'"]').each(function(t,a){e(this).val(e(i[t]).val())})},button_group:function(t,a){var n=a.find('[type="radio"]');t.find('[type="radio"]').each(function(t,a){if(e(a).prop("checked"))return e(n[t]).trigger("click"),!1})},checkbox:function(t,a){var n=a.find('[type="checkbox"]');t.find('[type="checkbox"]').each(function(t,a){e(n[t]).prop("checked",e(a).prop("checked"))})},color_picker:function(e,t){var a=acf.getField(e),n=acf.getField(t),i=a.$inputText().val();n.$inputText().iris("option","color",i)},date_picker:function(e,t){i._default(e,t,"text"),i._default(e,t,"hidden")},date_time_picker:function(e,t){i._default(e,t,"text"),i._default(e,t,"hidden")},file:function(e,t){var a=e.find(".acf-file-uploader"),n=t.find(".acf-file-uploader");i._default(e,t,"hidden"),a.hasClass("has-value")&&(n.find("div").first().html(a.find("div").first().html()),t.find(".acf-file-uploader").addClass("has-value"))},flexible_content:function(t,n){var i=acf.getField(t),c=acf.getField(n);i.$layouts().each(function(t,n){var i,d=e(n);c.add({layout:d.data("layout")}),i=c.$layouts().last(),a(d,i,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")})},gallery:function(t,a){var n=t.find(".acf-gallery-attachments"),i=a.find(".acf-gallery-attachments"),c=a.find('input[type="hidden"]'),d=c.attr("name")+"[]";n.children().each(function(t,a){$clone=e(a).clone(),$clone.find('[type="hidden"]').attr("name",d),i.append($clone)})},google_map:function(e,t){var a=acf.getField(e);acf.getField(t).setValue(a.getValue())},group:function(e,t){a(e,t,"> .acf-input > .acf-table > tbody > .acf-row > .acf-field, > .acf-input > .acf-fields > .acf-field")},image:function(e,t){i._default(e,t,"hidden"),t.find("img").attr("src",e.find("img").attr("src")),e.find(".acf-image-uploader").hasClass("has-value")&&t.find(".acf-image-uploader").addClass("has-value")},link:function(e,t){var a=e.find(".link-node"),n=t.find(".link-node");n.html(a.html()),n.attr("href",a.attr("href")),n.attr("target",a.attr("target")),n.trigger("change")},oembed:function(e,t){t.find('[data-name="search-input"]').val(e.find('[type="hidden"]').val()).trigger("blur")},post_object:function(e,t){i.select(e,t)},radio:function(e,t){i.button_group(e,t),i._default(e,t,"text")},range:function(e,t){i._default(e,t,"range"),i._default(e,t,"number")},relationship:function(t,a){var n=a.find(".values > .list"),i=a.find(".acf-relationship").children('input[type="hidden"]'),c=i.attr("name")+"[]";t.find(".values > .list").children().each(function(t,a){var i=e(a).clone();i.find('[type="hidden"]').attr("name",c),n.append(i)}),i.trigger("change")},repeater:function(t,n){var i=acf.getField(t),c=acf.getField(n);i.$rows().each(function(t,n){$new_row=c.add(),a(e(n),$new_row,"> .acf-field, > .acf-fields > .acf-field")})},select:function(t,a,n){n=n||" > .acf-input > select";var i=t.find(n),c=a.find(n);1*i.data("ui")&&(c.html(""),i.find("option").each(function(t,a){c.append(e(a).clone())})),$destOpts=c.find("option"),i.find("option").each(function(t,a){e($destOpts[t]).prop("selected",e(a).prop("selected"))})},taxonomy:function(e,t){i.radio(e,t),i.checkbox(e,t),i.select(e,t,"> .acf-input > .acf-taxonomy-field > select")},textarea:function(e,t){t.find("textarea").val(e.find("textarea").val())},time_picker:function(e,t){i._default(e,t,"text"),i._default(e,t,"hidden")},true_false:function(e,t){t.find('[type="checkbox"]').prop("checked",e.find('[type="checkbox"]').prop("checked")),t.find('[type="checkbox"]').trigger("change")},user:function(e,t){i.select(e,t)},wysiwyg:function(e,t){var a,n=acf.getField(e),i=acf.getField(t),c=i.$input().attr("id"),d=n.getValue();a=tinymce.get(c),a?a.setContent(d):i.$input().html(d)}},c=function(t,a){var n=e.extend({},t);return e.each(a,function(a,i){if(void 0!==t[a]){if("events"===a)return void(t.events=e.extend(t.events,i));"function"==typeof i&&(n[a]=t[a])}t[a]=i}),t.parent=n,t};c(acf.models.FlexibleContentField.prototype,{events:{'click [data-name="duplicate-layout"]':"_duplicate"},render:function(){var t;return t=this.parent.render.apply(this,arguments),this.$layouts().each(function(t,a){e(this).find('[data-name="duplicate-layout"]').length||e(this).find(".acf-fc-layout-controls").prepend(n.duplicate_flexible_btn)}),t},_duplicate:function(t){var n,i;n=e(t.target).closest(".layout"),n.closest(".acf-field"),this.add({layout:n.data("layout"),before:n}),i=n.prev(".layout"),a(n,i,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")}}),c(acf.models.RepeaterField.prototype,{events:{'click a[data-event="duplicate-row"]':"_duplicate"},render:function(){var t;return t=this.parent.render.apply(this,arguments),this.$rows().each(function(t){e(this).find("> td.remove").append(n.duplicate_repeater_btn)}),t},_duplicate:function(t){var n,i;e(t.target).hasClass("acf-icon")&&(n=e(t.target).closest(".acf-row"),i=this.add({before:n}),a(n,i))}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
