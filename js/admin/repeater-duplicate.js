!function(e){function t(e,t){var a;return a=e.attr("data-type"),c[a]?c[a](e,t):c._default(e,t,a)}function a(a,n,i){var i=i||"> .acf-field, > .acf-fields > .acf-field",f=a.find(i),c=n.find(i);f.each(function(a,n){return c[a]?e(f[a]).data("type")!==e(c[a]).data("type")?(console.trace("Error: source field type does not match destination field type"),!1):void t(e(f[a]),e(c[a])):(console.trace("Error: source fields do not match destination fields"),!1)})}var n=acf_duplicate_repeater.options,i=e.extend({},acf.fields.repeater),f=e.extend({},acf.fields.flexible_content),c={_default:function(t,a,n){var i=t.find('[type="'+n+'"]');a.find('[type="'+n+'"]').each(function(t,a){e(this).val(e(i[t]).val())})},button_group:function(t,a){var n=a.find('[type="radio"]');t.find('[type="radio"]').each(function(t,a){if(e(a).prop("checked"))return e(n[t]).trigger("click"),!1})},checkbox:function(t,a){var n=a.find('[type="checkbox"]');t.find('[type="checkbox"]').each(function(t,a){e(n[t]).prop("checked",e(a).prop("checked"))})},color_picker:function(e,t){c._default(e,t,"text"),c._default(e,t,"hidden")},date_picker:function(e,t){c._default(e,t,"text"),c._default(e,t,"hidden")},date_time_picker:function(e,t){c._default(e,t,"text"),c._default(e,t,"hidden")},file:function(e,t){var a=e.find(".acf-file-uploader"),n=t.find(".acf-file-uploader");c._default(e,t,"hidden"),a.hasClass("has-value")&&(n.find("div").first().html(a.find("div").first().html()),t.find(".acf-file-uploader").addClass("has-value"))},flexible_content:function(t,n){var i="> .acf-input > .acf-flexible-content > .values > .layout";acf.fields.flexible_content.set("$field",n),t.find(i).each(function(t,f){var c,d=e(f);acf.fields.flexible_content.add(d.data("layout")),c=n.find(i).last(),a(e(f),c,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")})},gallery:function(t,a){var n=t.find(".acf-gallery-attachments"),i=a.find(".acf-gallery-attachments"),f=a.find('input[type="hidden"]'),c=f.attr("name")+"[]";n.children().each(function(t,a){$clone=e(a).clone(),$clone.find('[type="hidden"]').attr("name",c),i.append($clone)})},google_map:function(e,t){c._default(e,t,"hidden")},group:function(e,t){a(e,t,"> .acf-input > .acf-table > tbody > .acf-row > .acf-field, > .acf-input > .acf-fields > .acf-field")},image:function(e,t){c._default(e,t,"hidden"),t.find("img").attr("src",e.find("img").attr("src")),e.find(".acf-image-uploader").hasClass("has-value")&&t.find(".acf-image-uploader").addClass("has-value")},link:function(e,t){var a=e.find(".link-node"),n=t.find(".link-node");n.html(a.html()),n.attr("href",a.attr("href")),n.attr("target",a.attr("target")),n.trigger("change")},oembed:function(e,t){t.find('[data-name="search-input"]').val(e.find('[type="hidden"]').val()).trigger("blur")},post_object:function(e,t){c.select(e,t)},radio:function(e,t){c.button_group(e,t),c._default(e,t,"text")},range:function(e,t){c._default(e,t,"range"),c._default(e,t,"number")},relationship:function(t,a){var n=a.find(".values > .list"),i=a.find(".acf-relationship").children('input[type="hidden"]'),f=i.attr("name")+"[]";t.find(".values > .list").children().each(function(t,a){var i=e(a).clone();i.find('[type="hidden"]').attr("name",f),n.append(i)}),i.trigger("change")},repeater:function(t,n){acf.fields.repeater.set("$field",n),t.find("> .acf-input > .acf-repeater > .acf-table > tbody > .acf-row:not(.acf-clone)").each(function(t,n){var i=acf.fields.repeater.add();a(e(n),i,"> .acf-field, > .acf-fields > .acf-field")})},select:function(t,a,n){n=n||" > .acf-input > select";var i=t.find(n),f=a.find(n);1*i.data("ui")&&(f.html(""),i.find("option").each(function(t,a){f.append(e(a).clone())})),$destOpts=f.find("option"),i.find("option").each(function(t,a){e($destOpts[t]).prop("selected",e(a).prop("selected"))})},taxonomy:function(e,t){c.radio(e,t),c.checkbox(e,t),c.select(e,t,"> .acf-input > .acf-taxonomy-field > select")},textarea:function(e,t){t.find("textarea").val(e.find("textarea").val())},time_picker:function(e,t){c._default(e,t,"text"),c._default(e,t,"hidden")},true_false:function(e,t){t.find('[type="checkbox"]').prop("checked",e.find('[type="checkbox"]').prop("checked")),t.find('[type="checkbox"]').trigger("change")},user:function(e,t){c.select(e,t)},wysiwyg:function(e,t){var a=function(a,n,i,f){if(f.get(0)===t.get(0)){var c=tinymce.get(e.find("textarea").attr("id"));c&&a.setContent(c.getContent())}};acf.add_action("wysiwyg_tinymce_init",a),t.find("textarea").html(e.find("textarea").html())}};acf.fields.flexible_content=acf.fields.flexible_content.extend({events:{'click [data-name="duplicate-layout"]':"_duplicate"},render:function(){var t;return t=f.render.apply(this,arguments),this.$values.children(".layout").each(function(t,a){e(this).find('[data-name="duplicate-layout"]').length||e(this).find(".acf-fc-layout-controlls").prepend(n.duplicate_flexible_btn)}),t},_duplicate:function(e){var t,n,i;n=e.$el.closest(".layout"),t=n.closest(".acf-field"),acf.fields.flexible_content.set("$field",t),acf.fields.flexible_content.add(n.data("layout"),n),i=n.prev(".layout"),a(n,i,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")}}),acf.fields.repeater=acf.fields.repeater.extend({events:{'click a[data-event="duplicate-row"]':"_duplicate"},render:function(){var t;return t=i.render.apply(this,arguments),this.$tbody.children().each(function(t){e(this).find("> td.remove").append(n.duplicate_repeater_btn)}),t},_duplicate:function(e){var t,n;e.$el.hasClass("acf-icon")&&(t=e.$el.closest(".acf-row"),n=this.add(t),a(t,n))}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
