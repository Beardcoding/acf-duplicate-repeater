!function(e){var t=acf_duplicate_repeater.options,a=e.extend({},acf.fields.repeater);acf.fields.repeater=acf.fields.repeater.extend({events:{'click a[data-event="duplicate-row"]':"_duplicate"},prepare_template:function(t,a){this.reset_ids(t),$clone_row=a.closest(".acf-table").find("tr.acf-clone"),t.find(".acf-field-wysiwyg").each(function(){var t=e(this).find(".tmce-active textarea.wp-editor-area"),a=t.html(),i=$clone_row.find('[data-key="'+e(this).attr("data-key")+'"]');e(this).html(i.html()),e(this).find("textarea.wp-editor-area").html(a)})},reset_ids:function(t){var a=t.attr("data-id"),i="acfcloneindex",n="-"+a+"-",c="["+a+"]";t.attr("data-id",i),t.find('[id*="'+a+'"]').each(function(){e(this).attr("id",e(this).attr("id").replace(n,"-acfcloneindex-"))}),t.find('[name*="'+a+'"]').each(function(){e(this).attr("name",e(this).attr("name").replace(c,"[acfcloneindex]"))}),t.find('label[for*="'+a+'"]').each(function(){e(this).attr("for",e(this).attr("for").replace(n,"-acfcloneindex-"))}),t.find("textarea.wp-editor-area").each(function(){e(this).attr("id","acf-editor-"+acf.get_uniqid())})},_duplicate:function(t){var a,i,n,c,r;return t.$el.hasClass("acf-icon")&&(i=t.$el.closest(".acf-row")),a=this.$clone,n=i.clone(),c=e("<table />").appendTo("body").append(n),this.prepare_template(n,i),this.$clone={$el:n,search:"acfcloneindex",replace:!1},i.find(".acf-field-wysiwyg").each(function(t,a){e(this)}),r=this.add(i),this.$clone=a,c.remove(),r},render:function(){var i;return i=a.render.apply(this,arguments),this.$tbody.children().each(function(a){e(this).find("> td.remove").append(t.duplicate_btn)}),i}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGVhdGVyLWR1cGxpY2F0ZS5qcyJdLCJuYW1lcyI6WyIkIiwib3B0aW9ucyIsImFjZl9kdXBsaWNhdGVfcmVwZWF0ZXIiLCJvcmlnX3JlcGVhdGVyIiwiZXh0ZW5kIiwiYWNmIiwiZmllbGRzIiwicmVwZWF0ZXIiLCJldmVudHMiLCJjbGljayBhW2RhdGEtZXZlbnQ9XCJkdXBsaWNhdGUtcm93XCJdIiwicHJlcGFyZV90ZW1wbGF0ZSIsIiRlbCIsIiRvcmlnIiwidGhpcyIsInJlc2V0X2lkcyIsIiRjbG9uZV9yb3ciLCJjbG9zZXN0IiwiZmluZCIsImVhY2giLCIkdGV4dGFyZWEiLCJydGVfdmFsdWUiLCJodG1sIiwiJHRoaXNfY2xvbmUiLCJhdHRyIiwiaWQiLCJuZXdfaWQiLCJzZWFyY2hfaWQiLCJzZWFyY2hfbmFtZSIsInJlcGxhY2UiLCJnZXRfdW5pcWlkIiwiX2R1cGxpY2F0ZSIsImUiLCIkcHJldl9jbG9uZSIsIiRyb3ciLCIkdGVtcGxhdGUiLCIkdG1wIiwiJGNvcHkiLCJoYXNDbGFzcyIsIiRjbG9uZSIsImNsb25lIiwiYXBwZW5kVG8iLCJhcHBlbmQiLCJzZWFyY2giLCJpIiwiZWwiLCJhZGQiLCJyZW1vdmUiLCJyZW5kZXIiLCJyZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsIiR0Ym9keSIsImNoaWxkcmVuIiwiZHVwbGljYXRlX2J0biIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBVUEsR0FDVCxHQUFJQyxHQUFVQyx1QkFBdUJELFFBQ3BDRSxFQUFnQkgsRUFBRUksVUFBWUMsSUFBSUMsT0FBT0MsU0FFMUNGLEtBQUlDLE9BQU9DLFNBQVdGLElBQUlDLE9BQU9DLFNBQVNILFFBQ3pDSSxRQUNDQyxzQ0FBdUMsY0FFeENDLGlCQUFrQixTQUFVQyxFQUFLQyxHQUdoQ0MsS0FBS0MsVUFBV0gsR0FFaEJJLFdBQWFILEVBQU1JLFFBQVEsY0FBY0MsS0FBSyxnQkFFOUNOLEVBQUlNLEtBQUssc0JBQXNCQyxLQUFLLFdBQ25DLEdBQUlDLEdBQVluQixFQUFFYSxNQUFNSSxLQUFLLHdDQUM1QkcsRUFBWUQsRUFBVUUsT0FDdEJDLEVBQWNQLFdBQVdFLEtBQUssY0FBZWpCLEVBQUVhLE1BQU1VLEtBQUssWUFBYSxLQUV4RXZCLEdBQUVhLE1BQU1RLEtBQU1DLEVBQVlELFFBRTFCckIsRUFBRWEsTUFBTUksS0FBSywyQkFBMkJJLEtBQU1ELE1BS2hETixVQUFXLFNBQVVILEdBQ3BCLEdBQUlhLEdBQUtiLEVBQUlZLEtBQUssV0FDakJFLEVBQVMsZ0JBQ1RDLEVBQWEsSUFBSUYsRUFBRyxJQUVwQkcsRUFBZSxJQUFJSCxFQUFHLEdBR3ZCYixHQUFJWSxLQUFLLFVBQVdFLEdBR3BCZCxFQUFJTSxLQUFLLFNBQVdPLEVBQUssTUFBTU4sS0FBSyxXQUNuQ2xCLEVBQUVhLE1BQU1VLEtBQUssS0FBTXZCLEVBQUVhLE1BQU1VLEtBQUssTUFBTUssUUFBU0YsRUFSakMsc0JBWWZmLEVBQUlNLEtBQUssV0FBYU8sRUFBSyxNQUFNTixLQUFLLFdBQ3JDbEIsRUFBRWEsTUFBTVUsS0FBSyxPQUFRdkIsRUFBRWEsTUFBTVUsS0FBSyxRQUFRSyxRQUFTRCxFQVhwQyxzQkFlaEJoQixFQUFJTSxLQUFLLGVBQWlCTyxFQUFLLE1BQU1OLEtBQUssV0FDekNsQixFQUFFYSxNQUFNVSxLQUFLLE1BQU92QixFQUFFYSxNQUFNVSxLQUFLLE9BQU9LLFFBQVNGLEVBbEJuQyxzQkFxQmZmLEVBQUlNLEtBQUssMkJBQTJCQyxLQUFLLFdBQ3hDbEIsRUFBRWEsTUFBTVUsS0FBTSxLQUFNLGNBQWdCbEIsSUFBSXdCLGlCQUcxQ0MsV0FBWSxTQUFVQyxHQUVyQixHQUFJQyxHQUVIQyxFQUNBQyxFQUFXQyxFQUNYQyxDQXNDRCxPQWpDSUwsR0FBRXBCLElBQUkwQixTQUFTLGNBQ2xCSixFQUFPRixFQUFFcEIsSUFBSUssUUFBUSxhQUl0QmdCLEVBQWNuQixLQUFLeUIsT0FFbkJKLEVBQVlELEVBQUtNLFFBQ2pCSixFQUFPbkMsRUFBRSxhQUFhd0MsU0FBUyxRQUFRQyxPQUFRUCxHQUUvQ3JCLEtBQUtILGlCQUFrQndCLEVBQVdELEdBR2xDcEIsS0FBS3lCLFFBQ0ozQixJQUFTdUIsRUFDVFEsT0FBVyxnQkFDWGQsU0FBWSxHQUdiSyxFQUFLaEIsS0FBSyxzQkFBc0JDLEtBQUssU0FBVXlCLEVBQUdDLEdBQ3BDNUMsRUFBRWEsUUFJaEJ1QixFQUFRdkIsS0FBS2dDLElBQUtaLEdBR2xCcEIsS0FBS3lCLE9BQVNOLEVBQ2RHLEVBQUtXLFNBS0VWLEdBSVJXLE9BQVEsV0FFUCxHQUFJQyxFQVNKLE9BUEFBLEdBQU03QyxFQUFjNEMsT0FBT0UsTUFBT3BDLEtBQU1xQyxXQUd4Q3JDLEtBQUtzQyxPQUFPQyxXQUFXbEMsS0FBSyxTQUFTeUIsR0FDcEMzQyxFQUFFYSxNQUFNSSxLQUFLLGVBQWV3QixPQUFReEMsRUFBUW9ELGlCQUd0Q0wsTUFNUE0iLCJmaWxlIjoicmVwZWF0ZXItZHVwbGljYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCQpe1xuXHR2YXIgb3B0aW9ucyA9IGFjZl9kdXBsaWNhdGVfcmVwZWF0ZXIub3B0aW9ucyxcblx0XHRvcmlnX3JlcGVhdGVyID0gJC5leHRlbmQoIHt9LCBhY2YuZmllbGRzLnJlcGVhdGVyICk7XG5cblx0YWNmLmZpZWxkcy5yZXBlYXRlciA9IGFjZi5maWVsZHMucmVwZWF0ZXIuZXh0ZW5kKHtcblx0XHRldmVudHM6IHtcblx0XHRcdCdjbGljayBhW2RhdGEtZXZlbnQ9XCJkdXBsaWNhdGUtcm93XCJdJzogJ19kdXBsaWNhdGUnXG5cdFx0fSxcblx0XHRwcmVwYXJlX3RlbXBsYXRlOiBmdW5jdGlvbiggJGVsLCAkb3JpZyApIHtcblx0XHRcdHZhciAkY2xvbmU7XG5cblx0XHRcdHRoaXMucmVzZXRfaWRzKCAkZWwgKTtcblxuXHRcdFx0JGNsb25lX3JvdyA9ICRvcmlnLmNsb3Nlc3QoJy5hY2YtdGFibGUnKS5maW5kKCd0ci5hY2YtY2xvbmUnKTtcblxuXHRcdFx0JGVsLmZpbmQoJy5hY2YtZmllbGQtd3lzaXd5ZycpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyICR0ZXh0YXJlYSA9ICQodGhpcykuZmluZCgnLnRtY2UtYWN0aXZlIHRleHRhcmVhLndwLWVkaXRvci1hcmVhJyksXG5cdFx0XHRcdFx0cnRlX3ZhbHVlID0gJHRleHRhcmVhLmh0bWwoKSxcblx0XHRcdFx0XHQkdGhpc19jbG9uZSA9ICRjbG9uZV9yb3cuZmluZCgnW2RhdGEta2V5PVwiJysgJCh0aGlzKS5hdHRyKCdkYXRhLWtleScpICsnXCJdJyk7XG5cblx0XHRcdFx0JCh0aGlzKS5odG1sKCAkdGhpc19jbG9uZS5odG1sKCkgKTtcblxuXHRcdFx0XHQkKHRoaXMpLmZpbmQoJ3RleHRhcmVhLndwLWVkaXRvci1hcmVhJykuaHRtbCggcnRlX3ZhbHVlICk7XG5cdFx0XHRcdFxuXHRcdFx0fSk7XG5cblx0XHR9LFxuXHRcdHJlc2V0X2lkczogZnVuY3Rpb24oICRlbCApIHtcblx0XHRcdHZhciBpZCA9ICRlbC5hdHRyKCdkYXRhLWlkJyksXG5cdFx0XHRcdG5ld19pZCA9ICdhY2ZjbG9uZWluZGV4Jyxcblx0XHRcdFx0c2VhcmNoX2lkXHRcdD0gJy0nK2lkKyctJyxcblx0XHRcdFx0cmVwbGFjZV9pZFx0XHQ9ICctJytuZXdfaWQrJy0nLFxuXHRcdFx0XHRzZWFyY2hfbmFtZSBcdD0gJ1snK2lkKyddJyxcblx0XHRcdFx0cmVwbGFjZV9uYW1lXHQ9ICdbJytuZXdfaWQrJ10nO1xuXG5cdFx0XHQkZWwuYXR0cignZGF0YS1pZCcsIG5ld19pZCApO1xuXG5cdFx0XHQvLyByZXBsYWNlIGlkc1xuXHRcdFx0JGVsLmZpbmQoJ1tpZCo9XCInICsgaWQgKyAnXCJdJykuZWFjaChmdW5jdGlvbigpe1x0XG5cdFx0XHRcdCQodGhpcykuYXR0cignaWQnLCAkKHRoaXMpLmF0dHIoJ2lkJykucmVwbGFjZSggc2VhcmNoX2lkLCByZXBsYWNlX2lkICkgKTtcblx0XHRcdH0pO1xuXHRcblx0XHRcdC8vIHJlcGxhY2UgbmFtZXNcblx0XHRcdCRlbC5maW5kKCdbbmFtZSo9XCInICsgaWQgKyAnXCJdJykuZWFjaChmdW5jdGlvbigpe1x0XG5cdFx0XHRcdCQodGhpcykuYXR0cignbmFtZScsICQodGhpcykuYXR0cignbmFtZScpLnJlcGxhY2UoIHNlYXJjaF9uYW1lLCByZXBsYWNlX25hbWUgKSApO1xuXHRcdFx0fSk7XG5cdFxuXHRcdFx0Ly8gcmVwbGFjZSBsYWJlbCBmb3Jcblx0XHRcdCRlbC5maW5kKCdsYWJlbFtmb3IqPVwiJyArIGlkICsgJ1wiXScpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0JCh0aGlzKS5hdHRyKCdmb3InLCAkKHRoaXMpLmF0dHIoJ2ZvcicpLnJlcGxhY2UoIHNlYXJjaF9pZCwgcmVwbGFjZV9pZCApICk7XG5cdFx0XHR9KTtcblxuXHRcdFx0JGVsLmZpbmQoJ3RleHRhcmVhLndwLWVkaXRvci1hcmVhJykuZWFjaChmdW5jdGlvbigpe1xuXHRcdFx0XHQkKHRoaXMpLmF0dHIoICdpZCcsICdhY2YtZWRpdG9yLScgKyBhY2YuZ2V0X3VuaXFpZCgpICk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdF9kdXBsaWNhdGU6IGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHR2YXIgJHByZXZfY2xvbmUsIFxuXHRcdFx0XHRpZCwgdW5pcXVpZCxcblx0XHRcdFx0JHJvdywgXG5cdFx0XHRcdCR0ZW1wbGF0ZSwgJHRtcCxcblx0XHRcdFx0JGNvcHk7XG5cdFx0XHQvLyB2YXJzXG5cdFx0XHRcblx0XHRcdFxuXHRcdFx0Ly8gYWRkIGJlZm9yZSByb3dcblx0XHRcdGlmKCBlLiRlbC5oYXNDbGFzcygnYWNmLWljb24nKSApIHtcblx0XHRcdFx0JHJvdyA9IGUuJGVsLmNsb3Nlc3QoJy5hY2Ytcm93Jyk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2t1cCBhY2YgY2xvbmUgb3B0aW9uc1xuXHRcdFx0JHByZXZfY2xvbmUgPSB0aGlzLiRjbG9uZTtcblxuXHRcdFx0JHRlbXBsYXRlID0gJHJvdy5jbG9uZSgpO1xuXHRcdFx0JHRtcCA9ICQoJzx0YWJsZSAvPicpLmFwcGVuZFRvKCdib2R5JykuYXBwZW5kKCAkdGVtcGxhdGUgKTtcblxuXHRcdFx0dGhpcy5wcmVwYXJlX3RlbXBsYXRlKCAkdGVtcGxhdGUsICRyb3cgKTtcblxuXHRcdFx0Ly8gZmFrZSBhY2YuY2xvbmUoKSBjdXJyZW50IHJvd1xuXHRcdFx0dGhpcy4kY2xvbmUgPSB7XG5cdFx0XHRcdCckZWwnXHRcdDogJHRlbXBsYXRlLFxuXHRcdFx0XHQnc2VhcmNoJ1x0OiAnYWNmY2xvbmVpbmRleCcsXG5cdFx0XHRcdCdyZXBsYWNlJ1x0OiBmYWxzZSxcblx0XHRcdH07XG5cblx0XHRcdCRyb3cuZmluZCgnLmFjZi1maWVsZC13eXNpd3lnJykuZWFjaChmdW5jdGlvbiggaSwgZWwgKSB7XG5cdFx0XHRcdHZhciAkZmllbGQgPSAkKHRoaXMpO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIG1ha2UgY29weVxuXHRcdFx0JGNvcHkgPSB0aGlzLmFkZCggJHJvdyApO1xuXG5cdFx0XHQvLyByZXN0b3JlIGFjZiBjbG9uZSBvcHRpb25zXG5cdFx0XHR0aGlzLiRjbG9uZSA9ICRwcmV2X2Nsb25lO1xuXHRcdFx0JHRtcC5yZW1vdmUoKTtcblxuXHRcdFx0Ly8gaW5pdCBmaWVsZHNcblx0XHRcdC8vKi9cblx0XHRcdC8vIGdpdmUgdGhlIGNvcHkgYmFja1xuXHRcdFx0cmV0dXJuICRjb3B5O1xuXG5cdFx0fSxcblxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdHZhciByZXQ7XG5cblx0XHRcdHJldCA9IG9yaWdfcmVwZWF0ZXIucmVuZGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblxuXHRcdFx0Ly8gdXBkYXRlIG9yZGVyIG51bWJlcnNcblx0XHRcdHRoaXMuJHRib2R5LmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbihpKXtcblx0XHRcdFx0JCh0aGlzKS5maW5kKCc+IHRkLnJlbW92ZScpLmFwcGVuZCggb3B0aW9ucy5kdXBsaWNhdGVfYnRuICk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9LFxuXHRcblx0fSk7XG5cdFxuXG59KShqUXVlcnkpIl19
